learning algorithm: depth = 2

training_data_user.dom

[{'score': 0.9636929460580912, 'test_inconsistent': 1.0, 'train_inconsistent':
0.5, 'test_diameter': 15}, {'score': 0.9630785231409256, 'test_inconsistent':
1.0, 'train_inconsistent': 0.5, 'test_diameter': 15}, {'score':
0.9682457053617907, 'test_inconsistent': 1.0, 'train_inconsistent': 0.5,
'test_diameter': 15}, {'score': 0.9619196661450183, 'test_inconsistent': 1.0,
'train_inconsistent': 0.5, 'test_diameter': 15}, {'score': 0.9682457053617907,
'test_inconsistent': 2.0, 'train_inconsistent': 1.5, 'test_diameter': 15}]

0-0.5, 0-1.0, 5-21

[{'score': 0.9643779039752195, 'test_inconsistent': 0.0, 'train_inconsistent':
0.0, 'test_diameter': 15}, {'score': 0.9642672190574831, 'test_inconsistent':
0.0, 'train_inconsistent': 0.0, 'test_diameter': 15}, {'score':
0.9682457053617907, 'test_inconsistent': 0.30000000000000004,
'train_inconsistent': 0.0, 'test_diameter': 15}, {'score': 0.9636174636174636,
'test_inconsistent': 0.0, 'train_inconsistent': 0.0, 'test_diameter': 15},
{'score': 0.9699170124481329, 'test_inconsistent': 0.0, 'train_inconsistent':
0.0, 'test_diameter': 15}]
[0.9726315789473684, 0.9729729729729729, 0.9543568464730291, 0.9754098360655737,
0.9504132231404958]

training_data_user.text

0.5-3.1, 0.5-6.0, 5-31

[{'score': 0.9663865546218487, 'test_inconsistent': 0.5, 'train_inconsistent':
1.0, 'test_diameter': 20}, {'score': 0.9641728134878821, 'test_inconsistent':
0.5, 'train_inconsistent': 1.0, 'test_diameter': 20}, {'score':
0.968421052631579, 'test_inconsistent': 3.5, 'train_inconsistent': 1.5,
'test_diameter': 20}, {'score': 0.9662802950474183, 'test_inconsistent': 0.5,
'train_inconsistent': 1.0, 'test_diameter': 20}, {'score': 0.9652631578947368,
'test_inconsistent': 3.5, 'train_inconsistent': 1.5, 'test_diameter': 20}]

[0.9639065817409767, 0.9727463312368972, 0.9557894736842105, 0.9643605870020964,
0.968421052631579]



learning algorithm depth = m - 1

training_data_user.dom

0.5-3.1, 0.5-6.0, 5-31

{'score': 0.9636929460580912, 'test_inconsistent': 0.5, 'train_inconsistent':
0.5, 'test_diameter': 15}, {'score': 0.9631168831168831, 'test_inconsistent':
0.5, 'train_inconsistent': 1.0, 'test_diameter': 15}, {'score':
0.968278731149246, 'test_inconsistent': 0.5, 'train_inconsistent': 1.0,
'test_diameter': 15}, {'score': 0.9619196661450183, 'test_inconsistent': 0.5,
'train_inconsistent': 0.5, 'test_diameter': 15}, {'score': 0.9682126107347576,
'test_inconsistent': 0.5, 'train_inconsistent': 0.5, 'test_diameter': 15}]
[0.970464135021097, 0.9708333333333334, 0.9502074688796681, 0.9773195876288661,
0.9523809523809523



training_data_user.text
0.5-3.1, 0.5-6.0, 5-31

[{'score': 0.9663512092534174, 'test_inconsistent': 0.5, 'train_inconsistent':
0.5, 'test_diameter': 20}, {'score': 0.9644146467251161, 'test_inconsistent':
0.5, 'train_inconsistent': 1.0, 'test_diameter': 15}, {'score':
0.968421052631579, 'test_inconsistent': 1.5, 'train_inconsistent': 2.0,
'test_diameter': 20}, {'score': 0.9657353716394308, 'test_inconsistent': 0.5,
'train_inconsistent': 0.5, 'test_diameter': 20}, {'score': 0.9654817104585266,
'test_inconsistent': 0.5, 'train_inconsistent': 1.0, 'test_diameter': 15}]
[0.9639065817409767, 0.9669421487603305, 0.9537815126050421, 0.9663865546218487,
0.9626556016597511]



##########################################################################################################
dom: T_train = 0.7, T_test = 1.8
text: T_train = 0.7, T_test = 2.1
minimize two objectives, first, total number of errors, second, distance between training threshold and testing threshold.

training_data_user.dom
best_parameters
[{'distance': 1.1000000000000003, 'score': 1313, 'test_inconsistent': 1.8000000000000003, 'train_inconsistent': 0.69999999999999996, 'test_diameter': 0}, {'distance': 1.1000000000000003, 'score': 1317, 'test_inconsistent': 1.8000000000000003, 'train_inconsistent': 0.69999999999999996, 'test_diameter': 0}, {'distance': 1.1000000000000003, 'score': 1338, 'test_inconsistent': 1.8000000000000003, 'train_inconsistent': 0.69999999999999996, 'test_diameter': 0}, {'distance': 1.1000000000000003, 'score': 1310, 'test_inconsistent': 1.8000000000000003, 'train_inconsistent': 0.69999999999999996, 'test_diameter': 0}, {'distance': 1.1000000000000003, 'score': 1314, 'test_inconsistent': 1.8000000000000003, 'train_inconsistent': 0.69999999999999996, 'test_diameter': 0}]
[335, 331, 310, 338, 334]




training_data_user.text
0.5-1.1, 1.5-2.5, 0
[{'distance': 1.5, 'score': 1238, 'test_inconsistent': 2.0, 'train_inconsistent': 0.5, 'test_diameter': 0}, {'distance': 1.5, 'score': 1222, 'test_inconsistent': 2.0, 'train_inconsistent': 0.5, 'test_diameter': 0}, {'distance': 1.5, 'score': 1269, 'test_inconsistent': 2.0, 'train_inconsistent': 0.5, 'test_diameter': 0}, {'distance': 1.5, 'score': 1221, 'test_inconsistent': 2.0, 'train_inconsistent': 0.5, 'test_diameter': 0}, {'distance': 1.5, 'score': 1246, 'test_inconsistent': 2.0, 'train_inconsistent': 0.5, 'test_diameter': 0}]
[311, 327, 280, 328, 303]




0.2-0.5,1.7-2.0
best_parameters
[{'distance': 1.3999999999999999, 'score': 1238, 'test_inconsistent': 1.8, 'train_inconsistent': 0.40000000000000008, 'test_diameter': 0}, {'distance': 1.3999999999999999, 'score': 1222, 'test_inconsistent': 1.8, 'train_inconsistent': 0.40000000000000008, 'test_diameter': 0}, {'distance': 1.3999999999999999, 'score': 1269, 'test_inconsistent': 1.8, 'train_inconsistent': 0.40000000000000008, 'test_diameter': 0}, {'distance': 1.3999999999999999, 'score': 1221, 'test_inconsistent': 1.8, 'train_inconsistent': 0.40000000000000008, 'test_diameter': 0}, {'distance': 1.3999999999999999, 'score': 1246, 'test_inconsistent': 1.8, 'train_inconsistent': 0.40000000000000008, 'test_diameter': 0}]
[311, 327, 280, 328, 303]

0.2-0.5,2.0-2.3
[{'distance': 1.7, 'score': 1237, 'test_inconsistent': 2.1000000000000001, 'train_inconsistent': 0.40000000000000008, 'test_diameter': 0}, {'distance': 1.7, 'score': 1221, 'test_inconsistent': 2.1000000000000001, 'train_inconsistent': 0.40000000000000008, 'test_diameter': 0}, {'distance': 1.5999999999999999, 'score': 1269, 'test_inconsistent': 2.0, 'train_inconsistent': 0.40000000000000008, 'test_diameter': 0}, {'distance': 1.7, 'score': 1220, 'test_inconsistent': 2.1000000000000001, 'train_inconsistent': 0.40000000000000008, 'test_diameter': 0}, {'distance': 1.7, 'score': 1245, 'test_inconsistent': 2.1000000000000001, 'train_inconsistent': 0.40000000000000008, 'test_diameter': 0}]
[311, 327, 280, 328, 303]



0.5-0.7,1.7-2.0
best_parameters
[{'distance': 1.2000000000000002, 'score': 1238, 'test_inconsistent': 1.8, 'train_inconsistent': 0.59999999999999998, 'test_diameter': 0}, {'distance': 1.2000000000000002, 'score': 1222, 'test_inconsistent': 1.8, 'train_inconsistent': 0.59999999999999998, 'test_diameter': 0}, {'distance': 1.2000000000000002, 'score': 1269, 'test_inconsistent': 1.8, 'train_inconsistent': 0.59999999999999998, 'test_diameter': 0}, {'distance': 1.2000000000000002, 'score': 1221, 'test_inconsistent': 1.8, 'train_inconsistent': 0.59999999999999998, 'test_diameter': 0}, {'distance': 1.2000000000000002, 'score': 1246, 'test_inconsistent': 1.8, 'train_inconsistent': 0.59999999999999998, 'test_diameter': 0}]
[311, 327, 280, 328, 303]

0.5,0.7,2.0,2.3
best_parameters
[{'distance': 1.5, 'score': 1237, 'test_inconsistent': 2.1000000000000001, 'train_inconsistent': 0.59999999999999998, 'test_diameter': 0}, {'distance': 1.5, 'score': 1221, 'test_inconsistent': 2.1000000000000001, 'train_inconsistent': 0.59999999999999998, 'test_diameter': 0}, {'distance': 1.3999999999999999, 'score': 1269, 'test_inconsistent': 2.0, 'train_inconsistent': 0.59999999999999998, 'test_diameter': 0}, {'distance': 1.5, 'score': 1220, 'test_inconsistent': 2.1000000000000001, 'train_inconsistent': 0.59999999999999998, 'test_diameter': 0}, {'distance': 1.5, 'score': 1245, 'test_inconsistent': 2.1000000000000001, 'train_inconsistent': 0.59999999999999998, 'test_diameter': 0}]
[311, 327, 280, 328, 303]



0.7-0.9,1.7-2.0
[{'distance': 1.1000000000000001, 'score': 1238, 'test_inconsistent': 1.8, 'train_inconsistent': 0.69999999999999996, 'test_diameter': 0}, {'distance': 1.1000000000000001, 'score': 1222, 'test_inconsistent': 1.8, 'train_inconsistent': 0.69999999999999996, 'test_diameter': 0}, {'distance': 1.1000000000000001, 'score': 1269, 'test_inconsistent': 1.8, 'train_inconsistent': 0.69999999999999996, 'test_diameter': 0}, {'distance': 1.1000000000000001, 'score': 1221, 'test_inconsistent': 1.8, 'train_inconsistent': 0.69999999999999996, 'test_diameter': 0}, {'distance': 1.1000000000000001, 'score': 1246, 'test_inconsistent': 1.8, 'train_inconsistent': 0.69999999999999996, 'test_diameter': 0}]
[311, 327, 280, 328, 303]

0.7-0.9, 2.0-2.3
best_parameters
[{'distance': 1.4000000000000001, 'score': 1237, 'test_inconsistent': 2.1000000000000001, 'train_inconsistent': 0.69999999999999996, 'test_diameter': 0}, {'distance': 1.4000000000000001, 'score': 1221, 'test_inconsistent': 2.1000000000000001, 'train_inconsistent': 0.69999999999999996, 'test_diameter': 0}, {'distance': 1.3, 'score': 1269, 'test_inconsistent': 2.0, 'train_inconsistent': 0.69999999999999996, 'test_diameter': 0}, {'distance': 1.3000000000000003, 'score': 1220, 'test_inconsistent': 2.1000000000000001, 'train_inconsistent': 0.79999999999999993, 'test_diameter': 0}, {'distance': 1.4000000000000001, 'score': 1245, 'test_inconsistent': 2.1000000000000001, 'train_inconsistent': 0.69999999999999996, 'test_diameter': 0}]
[311, 327, 280, 329, 303]


